// Barra de navega√ß√£o fixa com navega√ß√£o entre Cat√°logo e Kanban
import React from 'react'; // Importa React
import { NavLink } from 'react-router-dom'; // Importa NavLink para rotas ativas
import styles from './style/Navbar.module.css'; // Importa CSS Module

// Componente Navbar com props
export default function Navbar({ cartCount, theme, onToggleTheme }) { // Declara componente
  return ( // Retorna JSX
    <header className={styles.header}> {/* Cabe√ßalho fixo */}
      <div className={styles.content}> {/* Cont√™iner interno */}
        <NavLink to="/" className={styles.logo} aria-label="P√°gina inicial"> {/* Link do logo para raiz */}
          <span aria-hidden="true">üõçÔ∏è</span> {/* √çcone visual */}
          <strong>Mini Loja</strong> {/* Texto do logo */}
        </NavLink> {/* Fecha logo */}

        <nav className={styles.actions} aria-label="A√ß√µes e navega√ß√£o"> {/* A√ß√µes √† direita */}
          <button
            type="button" // Tipo de bot√£o
            className={styles.themeToggle} // Classe do bot√£o de tema
            onClick={onToggleTheme} // Alterna tema
            aria-label={theme === 'dark' ? 'Alternar para tema claro' : 'Alternar para tema escuro'} // R√≥tulo
            aria-pressed={theme === 'dark'} // Estado pressionado
          > {/* Abre bot√£o */}
            <span className={styles.themeThumb} aria-hidden="true" /> {/* Polegar deslizante */}
            <span className={styles.themeText}> {/* Texto do toggle */}
              {theme === 'dark' ? 'Escuro' : 'Claro'} {/* Texto */}
            </span> {/* Fecha span */}
          </button> {/* Fecha bot√£o tema */}

          <div className={styles.cart} role="status" aria-live="polite" aria-label="Itens no carrinho"> {/* Badge do carrinho */}
            <span className={styles.cartIcon} aria-hidden="true">üõí</span> {/* √çcone */}
            <span className={styles.cartCount}>{cartCount}</span> {/* Quantidade */}
          </div> {/* Fecha carrinho */}
        </nav> {/* Fecha a√ß√µes */}
      </div> {/* Fecha cont√™iner */}
    </header> // Fecha cabe√ßalho
  ); // Fim do return
} // Fim do componente Navbar